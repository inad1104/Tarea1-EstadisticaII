geom_histogram(binwidth = 1, fill = "blue", color = "black", alpha = 0.7) +
labs(title = "Histogram of Your Column", x = "Your Column Name", y = "Frequency")
knitr::opts_chunk$set(echo = TRUE)
echo=FALSE}
knitr::opts_chunk$set(echo = TRUE)
echo=FALSE
install.packages("ggthemes")
install.packages("httr")
library(dplyr)
library(tidyverse)
library(ggplot2)
library(httr)
library(readr)
library(ggthemes)
library(httr)
#url <- "https://github.com/inad1104/Tarea1-EstadisticaII/blob/df9683b260512959742a705476ac5998f7d8c1a6/BaseSalarios.csv"
#BaseSalarios <- read_csv(url, show_col_types = FALSE)
#BaseSalarios <- read_csv("C:/Users/ingri/Downloads/BaseSalarios.csv")
BaseSalarios <- read_csv("/Users/esaurm27/Desktop/Tarea1-EstadisticaII/BaseSalarios.csv")
BaseSalarios$Sexo <- ifelse(BaseSalarios$Sexo == 1, 'hombre', 'mujer')
BaseSalarios$`U. Salario` <- floor(BaseSalarios$`U. Salario`/1000)
media_salario_mujeres <- mean(BaseSalarios$`U. Salario`[BaseSalarios$Sexo == 'mujer'])
media_salario_hombres <- mean(BaseSalarios$`U. Salario`[BaseSalarios$Sexo == 'hombre'])
min_salario_mujeres <- min(BaseSalarios$`U. Salario`[BaseSalarios$Sexo == 'mujer'])
min_salario_hombres <- min(BaseSalarios$`U. Salario`[BaseSalarios$Sexo == 'hombre'])
max_salario_mujeres <- max(BaseSalarios$`U. Salario`[BaseSalarios$Sexo == 'mujer'])
max_salario_hombres <- max(BaseSalarios$`U. Salario`[BaseSalarios$Sexo == 'hombre'])
varianza_salario_mujeres <- var(BaseSalarios$`U. Salario`[BaseSalarios$Sexo == 'mujer'])
varianza_salario_hombres <- var(BaseSalarios$`U. Salario`[BaseSalarios$Sexo == 'hombre'])
data_salarios <- data.frame(
Sexo = c('mujer', 'hombre'),
Media_Salario = c(media_salario_mujeres, media_salario_hombres),
Min_Salario = c(min_salario_mujeres, min_salario_hombres),
Max_Salario = c(max_salario_mujeres, max_salario_hombres),
Varianza_Salario = c(varianza_salario_mujeres, varianza_salario_hombres)
)
media_cuotas_mujeres <- mean(BaseSalarios$Coutas[BaseSalarios$Sexo == 'mujer'])
media_cuotas_hombres <- mean(BaseSalarios$Coutas[BaseSalarios$Sexo == 'hombre'])
min_cuotas_mujeres <- min(BaseSalarios$Coutas[BaseSalarios$Sexo == 'mujer'])
min_cuotas_hombres <- min(BaseSalarios$Coutas[BaseSalarios$Sexo == 'hombre'])
max_cuotas_mujeres <- max(BaseSalarios$Coutas[BaseSalarios$Sexo == 'mujer'])
max_cuotas_hombres <- max(BaseSalarios$Coutas[BaseSalarios$Sexo == 'hombre'])
varianza_cuotas_mujeres <- var(BaseSalarios$Coutas[BaseSalarios$Sexo == 'mujer'])
varianza_cuotas_hombres <- var(BaseSalarios$Coutas[BaseSalarios$Sexo == 'hombre'])
data_cuotas <- data.frame(
Sexo = c('mujer', 'hombre'),
Media_cuotas = c(media_cuotas_mujeres, media_cuotas_hombres),
Min_cuotas = c(min_cuotas_mujeres, min_cuotas_hombres),
Max_cuotas = c(max_cuotas_mujeres, max_cuotas_hombres),
Varianza_cuotas = c(varianza_cuotas_mujeres, varianza_cuotas_hombres)
)
# Filtrar los datos solo para mujeres
data_mujeres <- BaseSalarios$`U. Salario`[BaseSalarios$Sexo == 'mujer']
# Crear un boxplot con ggplot2
p1 <- ggplot(data.frame(salario = data_mujeres), aes( x= salario)) +
geom_boxplot(fill = "skyblue", color = "darkblue", width = 0.5) +
theme_minimal() +  # Utilizar un tema minimalista
labs(title = "Boxplot del Salario para Mujeres",
x = "Salario",
y = "") +
theme_few() + # Utilizar un tema adicional de ggthemes para mejorar la apariencia
scale_x_continuous()
# Mostrar el gráfico
print(p1)
# Filtrar los datos solo para mujeres
data_hombres <- BaseSalarios$`U. Salario`[BaseSalarios$Sexo == 'hombre']
# Crear un boxplot con ggplot2
p2 <- ggplot(data.frame(salario = data_hombres), aes(x = salario)) +
geom_boxplot(fill = "skyblue", color = "darkblue", width = 0.5) +
theme_minimal() +  # Utilizar un tema minimalista
labs(title = "Boxplot del Salario para Hombres",
x = "Salario",
y = "") +
theme_few() + # Utilizar un tema adicional de ggthemes para mejorar la apariencia
scale_y_continuous()
# Mostrar el gráfico
print(p2)
# Boxplot por grupo
ggplot(data = BaseSalarios, aes(x = Sexo, y = `U. Salario`)) +
stat_boxplot(geom = "errorbar", # Bigotes
width = 0.2) +
geom_boxplot(fill = "#4271AE", colour = "#1F3552", # Colores
alpha = 0.9, outlier.colour = "red") +
scale_y_log10(name = "Salario") +  # Etiqueta de la variable continua
scale_x_discrete(name = "Sexo") +        # Etiqueta de los grupos
ggtitle("Boxplot por grupos en ggplot2") +       # Título del plot
theme(axis.line = element_line(colour = "black", # Personalización del tema
size = 0.25)) + theme_few()
knitr::opts_chunk$set(echo = TRUE)
echo=FALSE
#install.packages("ggthemes")
#install.packages("httr")
#install.packages("dplyr")
library(dplyr)
library(tidyverse)
library(ggplot2)
library(httr)
library(readr)
library(ggthemes)
library(httr)
#library(gridExtra)
url <- "https://raw.githubusercontent.com/inad1104/Tarea1-EstadisticaII/df9683b260512959742a705476ac5998f7d8c1a6/BaseSalarios.csv?token=GHSAT0AAAAAACMXYTOC2H3CXFRXINK223XCZNHL2RA"
BaseSalarios <- read_csv(url, show_col_types = FALSE)
knitr::opts_chunk$set(echo = TRUE)
echo=FALSE
#install.packages("ggthemes")
#install.packages("httr")
#install.packages("dplyr")
library(dplyr)
library(tidyverse)
library(ggplot2)
library(httr)
library(readr)
library(ggthemes)
library(httr)
#library(gridExtra)
#url <- "https://raw.githubusercontent.com/inad1104/Tarea1-EstadisticaII/df9683b260512959742a705476ac5998f7d8c1a6/BaseSalarios.csv?token=GHSAT0AAAAAACMXYTOC2H3CXFRXINK223XCZNHL2RA"
url<-"https://raw.githubusercontent.com/inad1104/Tarea1-EstadisticaII/main/BaseSalarios.csv?token=GHSAT0AAAAAACM3GTQD5UTLVM6TQYEWJJIIZNIBPPA"
BaseSalarios <- read_csv(url, show_col_types = FALSE)
BaseSalarios$Sexo <- ifelse(BaseSalarios$Sexo == 1, 'hombre', 'mujer')
BaseSalarios$`U. Salario` <- BaseSalarios$`U. Salario`/1000
media_salario_mujeres <- mean(BaseSalarios$`U. Salario`[BaseSalarios$Sexo == 'mujer'])
media_salario_hombres <- mean(BaseSalarios$`U. Salario`[BaseSalarios$Sexo == 'hombre'])
min_salario_mujeres <- min(BaseSalarios$`U. Salario`[BaseSalarios$Sexo == 'mujer'])
min_salario_hombres <- min(BaseSalarios$`U. Salario`[BaseSalarios$Sexo == 'hombre'])
max_salario_mujeres <- max(BaseSalarios$`U. Salario`[BaseSalarios$Sexo == 'mujer'])
max_salario_hombres <- max(BaseSalarios$`U. Salario`[BaseSalarios$Sexo == 'hombre'])
varianza_salario_mujeres <- var(BaseSalarios$`U. Salario`[BaseSalarios$Sexo == 'mujer'])
varianza_salario_hombres <- var(BaseSalarios$`U. Salario`[BaseSalarios$Sexo == 'hombre'])
desv_salario_mujeres <- sd(BaseSalarios$`U. Salario`[BaseSalarios$Sexo == 'mujer'])
desv_salario_hombres <- sd(BaseSalarios$`U. Salario`[BaseSalarios$Sexo == 'hombre'])
data_salarios <- data.frame(
Sexo = c('mujer', 'hombre'),
Media_Salario = c(media_salario_mujeres, media_salario_hombres),
Min_Salario = c(min_salario_mujeres, min_salario_hombres),
Max_Salario = c(max_salario_mujeres, max_salario_hombres),
Varianza_Salario = c(varianza_salario_mujeres, varianza_salario_hombres),
Desviacion_Salario = c(desv_salario_mujeres, desv_salario_hombres)
)
print(data_salarios)
media_cuotas_mujeres <- mean(BaseSalarios$Coutas[BaseSalarios$Sexo == 'mujer'])
media_cuotas_hombres <- mean(BaseSalarios$Coutas[BaseSalarios$Sexo == 'hombre'])
min_cuotas_mujeres <- min(BaseSalarios$Coutas[BaseSalarios$Sexo == 'mujer'])
min_cuotas_hombres <- min(BaseSalarios$Coutas[BaseSalarios$Sexo == 'hombre'])
max_cuotas_mujeres <- max(BaseSalarios$Coutas[BaseSalarios$Sexo == 'mujer'])
max_cuotas_hombres <- max(BaseSalarios$Coutas[BaseSalarios$Sexo == 'hombre'])
varianza_cuotas_mujeres <- var(BaseSalarios$Coutas[BaseSalarios$Sexo == 'mujer'])
varianza_cuotas_hombres <- var(BaseSalarios$Coutas[BaseSalarios$Sexo == 'hombre'])
desv_cuotas_mujeres <- sd(BaseSalarios$Coutas[BaseSalarios$Sexo == 'mujer'])
desv_cuotas_hombres <- sd(BaseSalarios$Coutas[BaseSalarios$Sexo == 'hombre'])
data_cuotas <- data.frame(
Sexo = c('mujer', 'hombre'),
Media_cuotas = c(media_cuotas_mujeres, media_cuotas_hombres),
Min_cuotas = c(min_cuotas_mujeres, min_cuotas_hombres),
Max_cuotas = c(max_cuotas_mujeres, max_cuotas_hombres),
Varianza_cuotas = c(varianza_cuotas_mujeres, varianza_cuotas_hombres),
Desviacion_cuotas = c(desv_cuotas_mujeres, desv_cuotas_hombres)
)
print(data_cuotas)
# Boxplot por grupo
ggplot(data = BaseSalarios, aes(x = Sexo, y = `U. Salario`)) +
stat_boxplot(geom = "errorbar", # Bigotes
width = 0.2) +
geom_boxplot(fill = "#4271AE", colour = "#1F3552", # Colores
alpha = 0.9, outlier.colour = "red") +
scale_y_log10(name = "Salario en miles") +  # Etiqueta de la variable continua
scale_x_discrete(name = "Sexo") +        # Etiqueta de los grupos
ggtitle("Gráfico de barras del salario por sexo") +       # Título del plot
theme(axis.line = element_line(colour = "black", # Personalización del tema
size = 0.25)) + theme_few()
t.test(BaseSalarios$`U. Salario`[BaseSalarios$Sexo == 'mujer'],BaseSalarios$`U. Salario`[BaseSalarios$Sexo == 'hombre'])
#Pregunta #2
m<-ggplot(BaseSalarios, aes(x = `U. Salario`)) +
geom_histogram(binwidth = 1, fill = "blue", color = "black", alpha = 0.7) +
labs(title = "Histogram of Your Column", x = "Salarios", y = "Frecuencia")
show(m)
D=density(BaseSalarios$`U. Salario`,kernel="rectangular")
#hist(BaseSalarios$`U. Salario`, main="DistribucionAsaltos-KernelUniforme", freq=FALSE) lines(D,lwd=2,lty=1,col ="blue")
ggplot(BaseSalarios, aes(x = `U. Salario`)) +
geom_histogram(binwidth = 1, fill = "blue", color = "black", alpha = 1.5) + geom_line(D,lwd=2,lty=1,col ="blue") +
labs(title = "Histogram of Your Column", x = "Salarios", y = "Frecuencia")
d<-ggplot(data = BaseSalarios, aes(x = `U. Salario`)) +
geom_histogram(binwidth = 1, fill = "blue", color = "lightblue", alpha = 0.7) +
geom_density(bw = "nrd0", kernel='rectangular', color = "black", alpha = 0.7) +
geom_density(bw = "nrd0", kernel='biweight',  color = "lightblue", alpha = 0.7) +
geom_density(bw = "nrd0",kernel='gaussian', color = "yellow", alpha = 0.7)+
geom_density(bw = "nrd0",kernel='epanechnikov', color = "red", alpha = 0.7) +
geom_density(bw = "nrd0", kernel='triangular', color = "pink", alpha = 0.7) +
geom_density(bw = "nrd0", kernel='cosine', color = "lightgreen", alpha = 0.7)
show(d)
#Pregunta #2
m<-ggplot(BaseSalarios, aes(x = `U. Salario`)) +
geom_histogram(binwidth = 1, fill = "blue", color = "lightblue", alpha = 0.7) +
labs(title = "Histogram of Your Column", x = "Salarios", y = "Frecuencia")
show(m)
d<-ggplot(data = BaseSalarios, aes(x = `U. Salario`)) +
geom_histogram(binwidth = 1, fill = "blue", color = "lightblue", alpha = 0.7) +
geom_density(bw = "nrd0", kernel='rectangular', color = "black", alpha = 0.7) +
geom_density(bw = "nrd0", kernel='biweight',  color = "lightblue", alpha = 0.7) +
geom_density(bw = "nrd0",kernel='gaussian', color = "yellow", alpha = 0.7)+
geom_density(bw = "nrd0",kernel='epanechnikov', color = "red", alpha = 0.7) +
geom_density(bw = "nrd0", kernel='triangular', color = "pink", alpha = 0.7) +
geom_density(bw = "nrd0", kernel='cosine', color = "black", alpha = 0.7)
show(d)
d<-ggplot(data = BaseSalarios, aes(x = `U. Salario`)) +
#geom_histogram(binwidth = 1, fill = "blue", color = "lightblue", alpha = 0.7) +
geom_density(bw = "nrd0", kernel='rectangular', color = "black", alpha = 0.7) +
geom_density(bw = "nrd0", kernel='biweight',  color = "lightblue", alpha = 0.7) +
geom_density(bw = "nrd0",kernel='gaussian', color = "yellow", alpha = 0.7)+
geom_density(bw = "nrd0",kernel='epanechnikov', color = "red", alpha = 0.7) +
geom_density(bw = "nrd0", kernel='triangular', color = "pink", alpha = 0.7) +
geom_density(bw = "nrd0", kernel='cosine', color = "black", alpha = 0.7)
show(d)
d<-ggplot(data = BaseSalarios, aes(x = `U. Salario`)) +
geom_histogram(binwidth = 1, fill = "blue", color = "lightblue", alpha = 0.7) +
geom_density(bw = "nrd0", kernel='rectangular', color = "black", alpha = 0.7) +
geom_density(bw = "nrd0", kernel='biweight',  color = "lightblue", alpha = 0.7) +
geom_density(bw = "nrd0",kernel='gaussian', color = "yellow", alpha = 0.7)+
geom_density(bw = "nrd0",kernel='epanechnikov', color = "red", alpha = 0.7) +
geom_density(bw = "nrd0", kernel='triangular', color = "pink", alpha = 0.7) +
geom_density(bw = "nrd0", kernel='cosine', color = "black", alpha = 0.7)
show(d)
d<-ggplot(data = BaseSalarios, aes(x = `U. Salario`)) +
geom_histogram(aes(y = ..count../sum(..count..))binwidth = 1, fill = "blue", color = "lightblue", alpha = 0.7) +
d<-ggplot(data = BaseSalarios, aes(x = `U. Salario`)) +
geom_histogram(aes(y = ..count../sum(..count..)),binwidth = 1, fill = "blue", color = "lightblue", alpha = 0.7) +
geom_density(bw = "nrd0", kernel='rectangular', color = "black", alpha = 0.7) +
geom_density(bw = "nrd0", kernel='biweight',  color = "lightblue", alpha = 0.7) +
geom_density(bw = "nrd0",kernel='gaussian', color = "yellow", alpha = 0.7)+
geom_density(bw = "nrd0",kernel='epanechnikov', color = "red", alpha = 0.7) +
geom_density(bw = "nrd0", kernel='triangular', color = "pink", alpha = 0.7) +
geom_density(bw = "nrd0", kernel='cosine', color = "black", alpha = 0.7)
show(d)
View(BaseSalarios)
knitr::opts_chunk$set(echo = TRUE)
url <- "https://raw.githubusercontent.com/inad1104/Tarea1-EstadisticaII/main/BaseSalarios.csv?token=GHSAT0AAAAAACMXYTODVUKCIKEMKPUAS4EYZNICNLA"
#l<-"https://raw.githubusercontent.com/inad1104/Tarea1-EstadisticaII/main/BaseSalarios.csv?token=GHSAT0AAAAAACM3GTQD5UTLVM6TQYEWJJIIZNIBPPA"
BaseSalarios <- read_csv(url, show_col_types = FALSE)
echo=FALSE
#install.packages("ggthemes")
#install.packages("httr")
#install.packages("dplyr")
library(dplyr)
library(tidyverse)
library(tidyverse)
library(ggplot2)
library(httr)
library(readr)
library(ggthemes)
library(httr)
#library(gridExtra)
```
url <- "https://raw.githubusercontent.com/inad1104/Tarea1-EstadisticaII/main/BaseSalarios.csv?token=GHSAT0AAAAAACMXYTODVUKCIKEMKPUAS4EYZNICNLA"
#l<-"https://raw.githubusercontent.com/inad1104/Tarea1-EstadisticaII/main/BaseSalarios.csv?token=GHSAT0AAAAAACM3GTQD5UTLVM6TQYEWJJIIZNIBPPA"
BaseSalarios <- read_csv(url, show_col_types = FALSE)
View(BaseSalarios)
BaseSalarios$Sexo <- ifelse(BaseSalarios$Sexo == 1, 'hombre', 'mujer')
BaseSalarios$`U. Salario` <- BaseSalarios$`U. Salario`/1000
media_salario_mujeres <- mean(BaseSalarios$`U. Salario`[BaseSalarios$Sexo == 'mujer'])
media_salario_hombres <- mean(BaseSalarios$`U. Salario`[BaseSalarios$Sexo == 'hombre'])
min_salario_mujeres <- min(BaseSalarios$`U. Salario`[BaseSalarios$Sexo == 'mujer'])
min_salario_hombres <- min(BaseSalarios$`U. Salario`[BaseSalarios$Sexo == 'hombre'])
max_salario_mujeres <- max(BaseSalarios$`U. Salario`[BaseSalarios$Sexo == 'mujer'])
max_salario_hombres <- max(BaseSalarios$`U. Salario`[BaseSalarios$Sexo == 'hombre'])
varianza_salario_mujeres <- var(BaseSalarios$`U. Salario`[BaseSalarios$Sexo == 'mujer'])
varianza_salario_hombres <- var(BaseSalarios$`U. Salario`[BaseSalarios$Sexo == 'hombre'])
desv_salario_mujeres <- sd(BaseSalarios$`U. Salario`[BaseSalarios$Sexo == 'mujer'])
desv_salario_hombres <- sd(BaseSalarios$`U. Salario`[BaseSalarios$Sexo == 'hombre'])
data_salarios <- data.frame(
Sexo = c('mujer', 'hombre'),
Media_Salario = c(media_salario_mujeres, media_salario_hombres),
Min_Salario = c(min_salario_mujeres, min_salario_hombres),
Max_Salario = c(max_salario_mujeres, max_salario_hombres),
Varianza_Salario = c(varianza_salario_mujeres, varianza_salario_hombres),
Desviacion_Salario = c(desv_salario_mujeres, desv_salario_hombres)
)
print(data_salarios)
media_cuotas_mujeres <- mean(BaseSalarios$Coutas[BaseSalarios$Sexo == 'mujer'])
media_cuotas_hombres <- mean(BaseSalarios$Coutas[BaseSalarios$Sexo == 'hombre'])
min_cuotas_mujeres <- min(BaseSalarios$Coutas[BaseSalarios$Sexo == 'mujer'])
min_cuotas_hombres <- min(BaseSalarios$Coutas[BaseSalarios$Sexo == 'hombre'])
max_cuotas_mujeres <- max(BaseSalarios$Coutas[BaseSalarios$Sexo == 'mujer'])
max_cuotas_hombres <- max(BaseSalarios$Coutas[BaseSalarios$Sexo == 'hombre'])
varianza_cuotas_mujeres <- var(BaseSalarios$Coutas[BaseSalarios$Sexo == 'mujer'])
varianza_cuotas_hombres <- var(BaseSalarios$Coutas[BaseSalarios$Sexo == 'hombre'])
desv_cuotas_mujeres <- sd(BaseSalarios$Coutas[BaseSalarios$Sexo == 'mujer'])
desv_cuotas_hombres <- sd(BaseSalarios$Coutas[BaseSalarios$Sexo == 'hombre'])
data_cuotas <- data.frame(
Sexo = c('mujer', 'hombre'),
Media_cuotas = c(media_cuotas_mujeres, media_cuotas_hombres),
Min_cuotas = c(min_cuotas_mujeres, min_cuotas_hombres),
Max_cuotas = c(max_cuotas_mujeres, max_cuotas_hombres),
Varianza_cuotas = c(varianza_cuotas_mujeres, varianza_cuotas_hombres),
Desviacion_cuotas = c(desv_cuotas_mujeres, desv_cuotas_hombres)
)
print(data_cuotas)
# Boxplot por grupo
ggplot(data = BaseSalarios, aes(x = Sexo, y = `U. Salario`)) +
stat_boxplot(geom = "errorbar", # Bigotes
width = 0.2) +
geom_boxplot(fill = "#4271AE", colour = "#1F3552", # Colores
alpha = 0.9, outlier.colour = "red") +
scale_y_log10(name = "Salario en miles") +  # Etiqueta de la variable continua
scale_x_discrete(name = "Sexo") +        # Etiqueta de los grupos
ggtitle("Gráfico de barras del salario por sexo") +       # Título del plot
theme(axis.line = element_line(colour = "black", # Personalización del tema
size = 0.25)) + theme_few()
#Pregunta #2
m<-ggplot(BaseSalarios, aes(x = `U. Salario`)) +
geom_histogram(binwidth = 1, fill = "blue", color = "lightblue", alpha = 0.7) +
labs(title = "Histogram of Your Column", x = "Salarios", y = "Frecuencia")
show(m)
d<-ggplot(data = BaseSalarios, aes(x = `U. Salario`)) +
geom_histogram(aes(y = ..count../sum(..count..)),binwidth = 1, fill = "blue", color = "lightblue", alpha = 0.7) +
geom_density(bw = "nrd0", kernel='rectangular', color = "black", alpha = 0.7) +
geom_density(bw = "nrd0", kernel='biweight',  color = "lightblue", alpha = 0.7) +
geom_density(bw = "nrd0",kernel='gaussian', color = "yellow", alpha = 0.7)+
geom_density(bw = "nrd0",kernel='epanechnikov', color = "red", alpha = 0.7) +
geom_density(bw = "nrd0", kernel='triangular', color = "pink", alpha = 0.7) +
geom_density(bw = "nrd0", kernel='cosine', color = "black", alpha = 0.7)
show(d)
#library(gridExtra)
library(univariateML)
install.packages("univariateML")
#### 2.
model.select(BaseSalarios$`U. Salario`)
model.select(BaseSalarios$`U. Salario`)
View(BaseSalarios)
model_select(BaseSalarios$`U. Salario`)
model.select(BaseSalarios$`U. Salario`)
library("univariateML")
model.select(BaseSalarios$`U. Salario`)
model.select(BaseSalarios$`U. Salario`,distribution="normal",trans.const=TRUE,
optim.indep.norm,optim.probs.indic=c(TRUE,TRUE,TRUE,TRUE),
famdep=TRUE,selec="bic",K.vec=1:3,tol=0.001,x=NULL,var.list=NULL)
install.packages("rriskDistributions")
install.packages("rriskDistributions")
install.packages("rriskDistributions")
knitr::opts_chunk$set(echo = TRUE)
library(rriskDistributions)
library(stepPlr)
install.packages("stepPlr")
library(stepPlr)
model_select(
BaseSalarios$`U. Salario`,
models = univariateML_models,
criterion = "aic",
na.rm = FALSE,
...
)
print(univariateML_models)
model_select(
BaseSalarios$`U. Salario`,
models = univariateML_models,
criterion = c("aic", "bic", "loglik"),
na.rm = FALSE,
...
)
library(univariateML)
model_select(
BaseSalarios$`U. Salario`,
models = univariateML_models,
criterion = c("aic", "bic", "loglik"),
na.rm = FALSE,
...
)
model_select(
BaseSalarios$`U. Salario`,
models = univariateML_models,
criterion = c("aic", "bic", "loglik"),
na.rm = FALSE
)
model_select(BaseSalarios$`U. Salario`)
prueba <- model_select(BaseSalarios$`U. Salario`)
print(prueba)
attributes(prueba)
prueba <- model_select(BaseSalarios$`U. Salario`, criterion = "aic")
prueba <- model_select(BaseSalarios$`U. Salario`, criterion = "aic")
print(prueba)
attributes(prueba)
print(univariateML_models)
prueba <- model_select(BaseSalarios$`U. Salario`, models = univariateML_models, criterion = "aic")
prueba <- model_select(BaseSalarios$`U. Salario`, models = univariateML_models, criterion = "aic")
print(prueba)
attributes(prueba)
print(prueba)
attributes(prueba)
print(attributes(prueba))
print(prueba)
print(attributes(prueba))
AIC(prueba)
print(attributes(prueba))
print(prueba)
print(attributes(prueba))
View(BaseSalarios)
fit.cont(BaseSalarios$`U. Salario`)
fit.cont(BaseSalarios$`U. Salario`,criterion = "aic")
fit.cont(BaseSalarios$`U. Salario`)
print(prueba)
print(attributes(prueba))
print(prueba)
print(attributes(prueba))
BaseSalarios <- read_csv("BaseSalarios.csv")
library(readr)
BaseSalarios <- read_csv("BaseSalarios.csv")
BaseSalarios <- read_csv("BaseSalarios.csv",show_col_types = FALSE)
View(BaseSalarios)
BaseSalarios$Sexo <- ifelse(BaseSalarios$Sexo == 1, 'hombre', 'mujer')
BaseSalarios$`U. Salario` <- BaseSalarios$`U. Salario`/1000
media_salario_mujeres <- mean(BaseSalarios$`U. Salario`[BaseSalarios$Sexo == 'mujer'])
media_salario_hombres <- mean(BaseSalarios$`U. Salario`[BaseSalarios$Sexo == 'hombre'])
min_salario_mujeres <- min(BaseSalarios$`U. Salario`[BaseSalarios$Sexo == 'mujer'])
min_salario_hombres <- min(BaseSalarios$`U. Salario`[BaseSalarios$Sexo == 'hombre'])
max_salario_mujeres <- max(BaseSalarios$`U. Salario`[BaseSalarios$Sexo == 'mujer'])
max_salario_hombres <- max(BaseSalarios$`U. Salario`[BaseSalarios$Sexo == 'hombre'])
varianza_salario_mujeres <- var(BaseSalarios$`U. Salario`[BaseSalarios$Sexo == 'mujer'])
varianza_salario_hombres <- var(BaseSalarios$`U. Salario`[BaseSalarios$Sexo == 'hombre'])
desv_salario_mujeres <- sd(BaseSalarios$`U. Salario`[BaseSalarios$Sexo == 'mujer'])
desv_salario_hombres <- sd(BaseSalarios$`U. Salario`[BaseSalarios$Sexo == 'hombre'])
data_salarios <- data.frame(
Sexo = c('mujer', 'hombre'),
Media_Salario = c(media_salario_mujeres, media_salario_hombres),
Min_Salario = c(min_salario_mujeres, min_salario_hombres),
Max_Salario = c(max_salario_mujeres, max_salario_hombres),
Varianza_Salario = c(varianza_salario_mujeres, varianza_salario_hombres),
Desviacion_Salario = c(desv_salario_mujeres, desv_salario_hombres)
)
print(data_salarios)
De la misma manera, se obtiene la media, el mínimo, el máximo, la varianza y la desviación estandar para las cuotas aportadas por sexo.
```{r}
media_cuotas_mujeres <- mean(BaseSalarios$Coutas[BaseSalarios$Sexo == 'mujer'])
media_cuotas_hombres <- mean(BaseSalarios$Coutas[BaseSalarios$Sexo == 'hombre'])
min_cuotas_mujeres <- min(BaseSalarios$Coutas[BaseSalarios$Sexo == 'mujer'])
min_cuotas_hombres <- min(BaseSalarios$Coutas[BaseSalarios$Sexo == 'hombre'])
max_cuotas_mujeres <- max(BaseSalarios$Coutas[BaseSalarios$Sexo == 'mujer'])
max_cuotas_hombres <- max(BaseSalarios$Coutas[BaseSalarios$Sexo == 'hombre'])
varianza_cuotas_mujeres <- var(BaseSalarios$Coutas[BaseSalarios$Sexo == 'mujer'])
varianza_cuotas_hombres <- var(BaseSalarios$Coutas[BaseSalarios$Sexo == 'hombre'])
desv_cuotas_mujeres <- sd(BaseSalarios$Coutas[BaseSalarios$Sexo == 'mujer'])
desv_cuotas_hombres <- sd(BaseSalarios$Coutas[BaseSalarios$Sexo == 'hombre'])
data_cuotas <- data.frame(
Sexo = c('mujer', 'hombre'),
Media_cuotas = c(media_cuotas_mujeres, media_cuotas_hombres),
Min_cuotas = c(min_cuotas_mujeres, min_cuotas_hombres),
Max_cuotas = c(max_cuotas_mujeres, max_cuotas_hombres),
Varianza_cuotas = c(varianza_cuotas_mujeres, varianza_cuotas_hombres),
Desviacion_cuotas = c(desv_cuotas_mujeres, desv_cuotas_hombres)
)
print(data_cuotas)
# Boxplot por grupo
ggplot(data = BaseSalarios, aes(x = Sexo, y = `U. Salario`)) +
stat_boxplot(geom = "errorbar", # Bigotes
width = 0.2) +
geom_boxplot(fill = "#4271AE", colour = "#1F3552", # Colores
alpha = 0.9, outlier.colour = "red") +
scale_y_log10(name = "Salario en miles") +  # Etiqueta de la variable continua
scale_x_discrete(name = "Sexo") +        # Etiqueta de los grupos
ggtitle("Gráfico de barras del salario por sexo") +       # Título del plot
theme(axis.line = element_line(colour = "black", # Personalización del tema
size = 0.25)) + theme_few()
#install.packages("ggthemes")
#install.packages("httr")
#install.packages("dplyr")
library(dplyr)
library(tidyverse)
library(tidyverse)
library(ggplot2)
library(httr)
library(readr)
library(ggthemes)
library(httr)
library(readr)
library(ggthemes)
library(httr)
library(univariateML)
library(rriskDistributions)
# Boxplot por grupo
ggplot(data = BaseSalarios, aes(x = Sexo, y = `U. Salario`)) +
stat_boxplot(geom = "errorbar", # Bigotes
width = 0.2) +
geom_boxplot(fill = "#4271AE", colour = "#1F3552", # Colores
alpha = 0.9, outlier.colour = "red") +
scale_y_log10(name = "Salario en miles") +  # Etiqueta de la variable continua
scale_x_discrete(name = "Sexo") +        # Etiqueta de los grupos
ggtitle("Gráfico de barras del salario por sexo") +       # Título del plot
theme(axis.line = element_line(colour = "black", # Personalización del tema
size = 0.25)) + theme_few()
t.test(BaseSalarios$`U. Salario`[BaseSalarios$Sexo == 'mujer'],BaseSalarios$`U. Salario`[BaseSalarios$Sexo == 'hombre'])
#Pregunta #2
m<-ggplot(BaseSalarios, aes(x = `U. Salario`)) +
geom_histogram(binwidth = 1, fill = "blue", color = "lightblue", alpha = 0.7) +
labs(title = "Histogram of Your Column", x = "Salarios", y = "Frecuencia")
show(m)
d<-ggplot(data = BaseSalarios, aes(x = `U. Salario`)) +
geom_histogram(aes(y = ..count../sum(..count..)),binwidth = 1, fill = "blue", color = "lightblue", alpha = 0.7) +
geom_density(bw = "nrd0", kernel='rectangular', color = "black", alpha = 0.7) +
geom_density(bw = "nrd0", kernel='biweight',  color = "lightblue", alpha = 0.7) +
geom_density(bw = "nrd0",kernel='gaussian', color = "yellow", alpha = 0.7)+
geom_density(bw = "nrd0",kernel='epanechnikov', color = "red", alpha = 0.7) +
geom_density(bw = "nrd0", kernel='triangular', color = "pink", alpha = 0.7) +
geom_density(bw = "nrd0", kernel='cosine', color = "black", alpha = 0.7)
show(d)
prueba <- model_select(BaseSalarios$`U. Salario`, models = univariateML_models, criterion = "aic")
prueba <- model_select(BaseSalarios$`U. Salario`, models = univariateML_models, criterion = "aic")
print(prueba)
fit.cont(BaseSalarios$`U. Salario`)
prueba2 <- fit.cont(BaseSalarios$`U. Salario`)
prueba2 <- if ( class(tcltk::tclRequire("Tktable")) == "tclObj" ) {fit.cont(BaseSalarios$`U. Salario`)}
library(rriskDistributions)
prueba2 <- if ( class(tcltk::tclRequire("Tktable")) == "tclObj" ) {fit.cont(BaseSalarios$`U. Salario`)}
install.packages("tcltk")
prueba2 <- fit.cont(BaseSalarios$`U. Salario`)
